# This file is part of eRCaGuy_dotfiles: https://github.com/ElectricRCAircraftGuy/eRCaGuy_dotfiles

# >> THIS IS THE PRIMARY BASH CONFIGURATION FILE FOR YOU TO EDIT AND CUSTOMIZE! <<

# INSTALLATION & USAGE INSTRUCTIONS:
# 1. If you are pulling in my bash configuration files for your usage, I recommend you leave the
#    ".bashrc" and ".bash_aliases" files alone, and copy and edit and customize this
#    ".bash_aliases_private" file instead!
# 2. See the "eRCaGuy_dotfiles/home/README.md" file, with full instructions and details, here:
#    https://github.com/ElectricRCAircraftGuy/eRCaGuy_dotfiles/tree/master/home

# ==================================================================================================
# PERSONAL (PRIVATE) Bash Setup, Variables, Aliases, & Functions
# - Add your personal, custom, or otherwise unshared bash aliases and functions here below.
# - It is recommended to use this file for your personal or private aliases and functions rather
#   than defining them in the "~/.bashrc" or "~/.bash_aliases" file.
# - If you have something you think is very useful to others, add it to the "~/.bash_aliases" file
#   and then open up a Pull Request on GitHub to ask me to merge it into the main eRCaGuy_dotfiles
#   repo.
# - All bash aliases or functions below will override any from the "~/.bash_aliases" file if
#   they have the same name.
# ==================================================================================================

# In my naming of aliases and functions, I like to precede names with my initials followed by an
# underscore, like this: `gs_some_cmd_name`. This way, simply by typing `gs_` at the terminal and
# then pressing Tab twice, I can quickly see a list of ALL of my available custom functions. To
# add your own initials, one technique is to simply add an alias to my aliases, like this. Let's
# assume your initials are "am":
# am_


# Uncomment one of the below options, or write your own, to set a default terminal title each time
# you open up a terminal. You can also change the current terminal title manually at any time. See
# `gs_set_title -h` for help.
#
# 1. Example static titles
# DEFAULT_TERMINAL_TITLE="my new title"
# 2. Example dynamic titles
# DEFAULT_TERMINAL_TITLE='Current Directory is "$PWD"'
# DEFAULT_TERMINAL_TITLE='Date and time of last cmd is "$(date)"'




# ----------------------------------------------
# Configure default tabs to open if desired
# - UPDATE TITLES AND CMDS TO SUIT YOUR NEEDS!
# - See: https://askubuntu.com/questions/315408/open-terminal-with-multiple-tabs-and-execute-application/1026563#1026563
# ----------------------------------------------

# Uncomment the line for your desired terminal.
TERMINAL="terminator"      # my preference
# TERMINAL="gnome-terminal"  # the default that comes with Ubuntu 18.04, 20.04, etc.

# Tab titles
TERMINAL_TAB_TITLE1="git"
# TERMINAL_TAB_TITLE2="bazel"
# TERMINAL_TAB_TITLE3="Python"
# TERMINAL_TAB_TITLE4="ssh1"
# TERMINAL_TAB_TITLE5="ssh2"
# TERMINAL_TAB_TITLE6="ssh3"
# TERMINAL_TAB_TITLE7="other"

# Tab commands
# Notes:
# 1. Use single quotes (') as shown below if there are any spaces in the path:
#    `TERMINAL_TAB_CMD4="cd '$HOME/some directory with spaces'"
# 2. Escape apostrophes in `echo -e` with `\x27`. See my detailed answer here for more examples:
#    https://stackoverflow.com/questions/1250079/how-to-escape-single-quotes-within-single-quoted-strings/65878993#65878993

TERMINAL_TAB_CMD1="cd '$HOME'; ls; echo -e \"\n===== Let\x27s get ready to code! =====\n\""
# TERMINAL_TAB_CMD2="cd '$HOME'; ll"
# TERMINAL_TAB_CMD3="cd '$HOME/GS/dev'"
# TERMINAL_TAB_CMD4="cd '$HOME/some directory with spaces'; ls"
# TERMINAL_TAB_CMD5="cd '$HOME'; ll"
# TERMINAL_TAB_CMD6="cd '$HOME/GS/dev'"
# TERMINAL_TAB_CMD7="cd '$HOME/GS/dev'"
